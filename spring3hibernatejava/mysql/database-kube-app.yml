apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sqldemo-ebs-sc
  namespace: database
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-mysql-pv-claim1
  namespace: database
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: sqldemo-ebs-sc
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: whattowatch-db-script
  namespace: database
data:
  mysql_whattowatch.sql: |-
    DROP DATABASE IF EXISTS employeedb;
    CREATE DATABASE employeedb;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - database
      containers:
        - name: mysql
          image: mysql:5.6
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-vol1
              mountPath: /var/lib/mysql
            - name: mysql-vol2
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-vol1
          persistentVolumeClaim:
            claimName: ebs-mysql-pv-claim1
        - name: mysql-vol2
          configMap:
            name: whattowatch-db-script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: database
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
  clusterIP: None